{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":391,"status":"ok","timestamp":1684357032900,"user":{"displayName":"Pijush Bhuyan","userId":"04528471696330882279"},"user_tz":-330},"id":"pl-Bz2jEnTRv","outputId":"56652d0f-2a84-4b01-c848-5f38b410ffc5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  /content/Object Detection and Tracking.zip\n","  inflating: KITTI_17_images/000001.jpg  \n","  inflating: KITTI_17_images/000002.jpg  \n","  inflating: KITTI_17_images/000003.jpg  \n","  inflating: KITTI_17_images/000004.jpg  \n","  inflating: KITTI_17_images/000005.jpg  \n","  inflating: KITTI_17_images/000006.jpg  \n","  inflating: KITTI_17_images/000007.jpg  \n","  inflating: KITTI_17_images/000008.jpg  \n","  inflating: KITTI_17_images/000009.jpg  \n","  inflating: KITTI_17_images/000010.jpg  \n","  inflating: KITTI_17_images/000011.jpg  \n","  inflating: KITTI_17_images/000012.jpg  \n","  inflating: KITTI_17_images/000013.jpg  \n","  inflating: KITTI_17_images/000014.jpg  \n","  inflating: KITTI_17_images/000015.jpg  \n","  inflating: KITTI_17_images/000016.jpg  \n","  inflating: KITTI_17_images/000017.jpg  \n","  inflating: KITTI_17_images/000018.jpg  \n","  inflating: KITTI_17_images/000019.jpg  \n","  inflating: KITTI_17_images/000020.jpg  \n","  inflating: KITTI_17_images/000021.jpg  \n","  inflating: KITTI_17_images/000022.jpg  \n","  inflating: KITTI_17_images/000023.jpg  \n","  inflating: KITTI_17_images/000024.jpg  \n","  inflating: KITTI_17_images/000025.jpg  \n","  inflating: KITTI_17_images/000026.jpg  \n","  inflating: KITTI_17_images/000027.jpg  \n","  inflating: KITTI_17_images/000028.jpg  \n","  inflating: KITTI_17_images/000029.jpg  \n","  inflating: KITTI_17_images/000030.jpg  \n","  inflating: KITTI_17_images/000031.jpg  \n","  inflating: KITTI_17_images/000032.jpg  \n","  inflating: KITTI_17_images/000033.jpg  \n","  inflating: KITTI_17_images/000034.jpg  \n","  inflating: KITTI_17_images/000035.jpg  \n","  inflating: KITTI_17_images/000036.jpg  \n","  inflating: KITTI_17_images/000037.jpg  \n","  inflating: KITTI_17_images/000038.jpg  \n","  inflating: KITTI_17_images/000039.jpg  \n","  inflating: KITTI_17_images/000040.jpg  \n","  inflating: KITTI_17_images/000041.jpg  \n","  inflating: KITTI_17_images/000042.jpg  \n","  inflating: KITTI_17_images/000043.jpg  \n","  inflating: KITTI_17_images/000044.jpg  \n","  inflating: KITTI_17_images/000045.jpg  \n","  inflating: KITTI_17_images/000046.jpg  \n","  inflating: KITTI_17_images/000047.jpg  \n","  inflating: KITTI_17_images/000048.jpg  \n","  inflating: KITTI_17_images/000049.jpg  \n","  inflating: KITTI_17_images/000050.jpg  \n","  inflating: KITTI_17_images/000051.jpg  \n","  inflating: KITTI_17_images/000052.jpg  \n","  inflating: KITTI_17_images/000053.jpg  \n","  inflating: KITTI_17_images/000054.jpg  \n","  inflating: KITTI_17_images/000055.jpg  \n","  inflating: KITTI_17_images/000056.jpg  \n","  inflating: KITTI_17_images/000057.jpg  \n","  inflating: KITTI_17_images/000058.jpg  \n","  inflating: KITTI_17_images/000059.jpg  \n","  inflating: KITTI_17_images/000060.jpg  \n","  inflating: KITTI_17_images/000061.jpg  \n","  inflating: KITTI_17_images/000062.jpg  \n","  inflating: KITTI_17_images/000063.jpg  \n","  inflating: KITTI_17_images/000064.jpg  \n","  inflating: KITTI_17_images/000065.jpg  \n","  inflating: KITTI_17_images/000066.jpg  \n","  inflating: KITTI_17_images/000067.jpg  \n","  inflating: KITTI_17_images/000068.jpg  \n","  inflating: KITTI_17_images/000069.jpg  \n","  inflating: KITTI_17_images/000070.jpg  \n","  inflating: KITTI_17_images/000071.jpg  \n","  inflating: KITTI_17_images/000072.jpg  \n","  inflating: KITTI_17_images/000073.jpg  \n","  inflating: KITTI_17_images/000074.jpg  \n","  inflating: KITTI_17_images/000075.jpg  \n","  inflating: KITTI_17_images/000076.jpg  \n","  inflating: KITTI_17_images/000077.jpg  \n","  inflating: KITTI_17_images/000078.jpg  \n","  inflating: KITTI_17_images/000079.jpg  \n","  inflating: KITTI_17_images/000080.jpg  \n","  inflating: KITTI_17_images/000081.jpg  \n","  inflating: KITTI_17_images/000082.jpg  \n","  inflating: KITTI_17_images/000083.jpg  \n","  inflating: KITTI_17_images/000084.jpg  \n","  inflating: KITTI_17_images/000085.jpg  \n","  inflating: KITTI_17_images/000086.jpg  \n","  inflating: KITTI_17_images/000087.jpg  \n","  inflating: KITTI_17_images/000088.jpg  \n","  inflating: KITTI_17_images/000089.jpg  \n","  inflating: KITTI_17_images/000090.jpg  \n","  inflating: KITTI_17_images/000091.jpg  \n","  inflating: KITTI_17_images/000092.jpg  \n","  inflating: KITTI_17_images/000093.jpg  \n","  inflating: KITTI_17_images/000094.jpg  \n","  inflating: KITTI_17_images/000095.jpg  \n","  inflating: KITTI_17_images/000096.jpg  \n","  inflating: KITTI_17_images/000097.jpg  \n","  inflating: KITTI_17_images/000098.jpg  \n","  inflating: KITTI_17_images/000099.jpg  \n","  inflating: KITTI_17_images/000100.jpg  \n","  inflating: KITTI_17_images/000101.jpg  \n","  inflating: KITTI_17_images/000102 (1).jpg  \n","  inflating: KITTI_17_images/000102.jpg  \n","  inflating: KITTI_17_images/000103.jpg  \n","  inflating: KITTI_17_images/000104.jpg  \n","  inflating: KITTI_17_images/000105.jpg  \n","  inflating: KITTI_17_images/000106.jpg  \n","  inflating: KITTI_17_images/000107.jpg  \n","  inflating: KITTI_17_images/000108.jpg  \n","  inflating: KITTI_17_images/000109.jpg  \n","  inflating: KITTI_17_images/000110.jpg  \n","  inflating: KITTI_17_images/000111.jpg  \n","  inflating: KITTI_17_images/000112.jpg  \n","  inflating: KITTI_17_images/000113.jpg  \n","  inflating: KITTI_17_images/000114.jpg  \n","  inflating: KITTI_17_images/000115.jpg  \n","  inflating: KITTI_17_images/000116.jpg  \n","  inflating: KITTI_17_images/000117.jpg  \n","  inflating: KITTI_17_images/000118.jpg  \n","  inflating: KITTI_17_images/000119.jpg  \n","  inflating: KITTI_17_images/000120.jpg  \n","  inflating: KITTI_17_images/000121.jpg  \n","  inflating: KITTI_17_images/000122.jpg  \n","  inflating: KITTI_17_images/000123.jpg  \n","  inflating: KITTI_17_images/000124.jpg  \n","  inflating: KITTI_17_images/000125.jpg  \n","  inflating: KITTI_17_images/000126.jpg  \n","  inflating: KITTI_17_images/000127.jpg  \n","  inflating: KITTI_17_images/000128.jpg  \n","  inflating: KITTI_17_images/000129.jpg  \n","  inflating: KITTI_17_images/000130.jpg  \n","  inflating: KITTI_17_images/000131.jpg  \n","  inflating: KITTI_17_images/000132.jpg  \n","  inflating: KITTI_17_images/000133.jpg  \n","  inflating: KITTI_17_images/000134.jpg  \n","  inflating: KITTI_17_images/000135.jpg  \n","  inflating: KITTI_17_images/000136.jpg  \n","  inflating: KITTI_17_images/000137.jpg  \n","  inflating: KITTI_17_images/000138.jpg  \n","  inflating: KITTI_17_images/000139.jpg  \n","  inflating: KITTI_17_images/000140.jpg  \n","  inflating: KITTI_17_images/000141.jpg  \n","  inflating: KITTI_17_images/000142.jpg  \n","  inflating: KITTI_17_images/000143.jpg  \n","  inflating: KITTI_17_images/000144.jpg  \n","  inflating: KITTI_17_images/000145.jpg  \n"," extracting: SORT/.gitignore         \n","   creating: SORT/__pycache__/\n","  inflating: SORT/__pycache__/sort.cpython-310.pyc  \n","   creating: SORT/data/\n","   creating: SORT/data/train/\n","   creating: SORT/data/train/ADL-Rundle-6/\n","   creating: SORT/data/train/ADL-Rundle-6/det/\n","  inflating: SORT/data/train/ADL-Rundle-6/det/det.txt  \n","   creating: SORT/data/train/ADL-Rundle-8/\n","   creating: SORT/data/train/ADL-Rundle-8/det/\n","  inflating: SORT/data/train/ADL-Rundle-8/det/det.txt  \n","   creating: SORT/data/train/ETH-Bahnhof/\n","   creating: SORT/data/train/ETH-Bahnhof/det/\n","  inflating: SORT/data/train/ETH-Bahnhof/det/det.txt  \n","   creating: SORT/data/train/ETH-Pedcross2/\n","   creating: SORT/data/train/ETH-Pedcross2/det/\n","  inflating: SORT/data/train/ETH-Pedcross2/det/det.txt  \n","   creating: SORT/data/train/ETH-Sunnyday/\n","   creating: SORT/data/train/ETH-Sunnyday/det/\n","  inflating: SORT/data/train/ETH-Sunnyday/det/det.txt  \n","   creating: SORT/data/train/KITTI-13/\n","   creating: SORT/data/train/KITTI-13/det/\n","  inflating: SORT/data/train/KITTI-13/det/det.txt  \n","   creating: SORT/data/train/KITTI-17/\n","   creating: SORT/data/train/KITTI-17/det/\n","  inflating: SORT/data/train/KITTI-17/det/det.txt  \n","   creating: SORT/data/train/PETS09-S2L1/\n","   creating: SORT/data/train/PETS09-S2L1/det/\n","  inflating: SORT/data/train/PETS09-S2L1/det/det.txt  \n","   creating: SORT/data/train/TUD-Campus/\n","   creating: SORT/data/train/TUD-Campus/det/\n","  inflating: SORT/data/train/TUD-Campus/det/det.txt  \n","   creating: SORT/data/train/TUD-Stadtmitte/\n","   creating: SORT/data/train/TUD-Stadtmitte/det/\n","  inflating: SORT/data/train/TUD-Stadtmitte/det/det.txt  \n","   creating: SORT/data/train/Venice-2/\n","   creating: SORT/data/train/Venice-2/det/\n","  inflating: SORT/data/train/Venice-2/det/det.txt  \n","  inflating: SORT/LICENSE            \n","  inflating: SORT/README.md          \n","  inflating: SORT/requirements.txt   \n","  inflating: SORT/sort.py            \n"]}],"source":["# unzip the code files and video frames\n","!unzip '/content/Object Detection and Tracking.zip'"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tPrA4KAXmYSI","executionInfo":{"status":"ok","timestamp":1684357299492,"user_tz":-330,"elapsed":238992,"user":{"displayName":"Pijush Bhuyan","userId":"04528471696330882279"}},"outputId":"652e69e3-9059-47e8-a237-102d8191b6e0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting filterpy==1.4.5 (from -r SORT/requirements.txt (line 1))\n","  Downloading filterpy-1.4.5.zip (177 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/178.0 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m178.0/178.0 kB\u001b[0m \u001b[31m5.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting scikit-image==0.17.2 (from -r SORT/requirements.txt (line 2))\n","  Downloading scikit-image-0.17.2.tar.gz (29.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m29.8/29.8 MB\u001b[0m \u001b[31m39.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting lap==0.4.0 (from -r SORT/requirements.txt (line 3))\n","  Downloading lap-0.4.0.tar.gz (1.5 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.5/1.5 MB\u001b[0m \u001b[31m70.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from filterpy==1.4.5->-r SORT/requirements.txt (line 1)) (1.22.4)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from filterpy==1.4.5->-r SORT/requirements.txt (line 1)) (1.10.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from filterpy==1.4.5->-r SORT/requirements.txt (line 1)) (3.7.1)\n","Requirement already satisfied: networkx>=2.0 in /usr/local/lib/python3.10/dist-packages (from scikit-image==0.17.2->-r SORT/requirements.txt (line 2)) (3.1)\n","Requirement already satisfied: pillow!=7.1.0,!=7.1.1,>=4.3.0 in /usr/local/lib/python3.10/dist-packages (from scikit-image==0.17.2->-r SORT/requirements.txt (line 2)) (8.4.0)\n","Requirement already satisfied: imageio>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from scikit-image==0.17.2->-r SORT/requirements.txt (line 2)) (2.25.1)\n","Requirement already satisfied: tifffile>=2019.7.26 in /usr/local/lib/python3.10/dist-packages (from scikit-image==0.17.2->-r SORT/requirements.txt (line 2)) (2023.4.12)\n","Requirement already satisfied: PyWavelets>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-image==0.17.2->-r SORT/requirements.txt (line 2)) (1.4.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy==1.4.5->-r SORT/requirements.txt (line 1)) (1.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy==1.4.5->-r SORT/requirements.txt (line 1)) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy==1.4.5->-r SORT/requirements.txt (line 1)) (4.39.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy==1.4.5->-r SORT/requirements.txt (line 1)) (1.4.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy==1.4.5->-r SORT/requirements.txt (line 1)) (23.1)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy==1.4.5->-r SORT/requirements.txt (line 1)) (3.0.9)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy==1.4.5->-r SORT/requirements.txt (line 1)) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->filterpy==1.4.5->-r SORT/requirements.txt (line 1)) (1.16.0)\n","Building wheels for collected packages: filterpy, scikit-image, lap\n","  Building wheel for filterpy (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for filterpy: filename=filterpy-1.4.5-py3-none-any.whl size=110459 sha256=4404ca9fbdf084072270ec87abcbceac527737fc2d0854583b81bf82772f8412\n","  Stored in directory: /root/.cache/pip/wheels/0f/0c/ea/218f266af4ad626897562199fbbcba521b8497303200186102\n","  \u001b[1;31merror\u001b[0m: \u001b[1msubprocess-exited-with-error\u001b[0m\n","  \n","  \u001b[31m×\u001b[0m \u001b[32mpython setup.py bdist_wheel\u001b[0m did not run successfully.\n","  \u001b[31m│\u001b[0m exit code: \u001b[1;36m1\u001b[0m\n","  \u001b[31m╰─>\u001b[0m See above for output.\n","  \n","  \u001b[1;35mnote\u001b[0m: This error originates from a subprocess, and is likely not a problem with pip.\n","  Building wheel for scikit-image (setup.py) ... \u001b[?25lerror\n","\u001b[31m  ERROR: Failed building wheel for scikit-image\u001b[0m\u001b[31m\n","\u001b[0m\u001b[?25h  Running setup.py clean for scikit-image\n","  Building wheel for lap (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for lap: filename=lap-0.4.0-cp310-cp310-linux_x86_64.whl size=1655228 sha256=8c7fb42cb58348518c80b4fe9c7c27164e5d64e31d3ea69dc9b732f912829104\n","  Stored in directory: /root/.cache/pip/wheels/00/42/2e/9dfe19270eea279d79e84767ff0d7b8082c3bf776cad00e83d\n","Successfully built filterpy lap\n","Failed to build scikit-image\n","\u001b[31mERROR: Could not build wheels for scikit-image, which is required to install pyproject.toml-based projects\u001b[0m\u001b[31m\n","\u001b[0mLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting cv\n","  Downloading cv-1.0.0-py3-none-any.whl (7.3 kB)\n","Collecting ultralytics\n","  Downloading ultralytics-8.0.105-py3-none-any.whl (586 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m586.5/586.5 kB\u001b[0m \u001b[31m11.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: matplotlib>=3.2.2 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (3.7.1)\n","Requirement already satisfied: opencv-python>=4.6.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (4.7.0.72)\n","Requirement already satisfied: Pillow>=7.1.2 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (8.4.0)\n","Requirement already satisfied: PyYAML>=5.3.1 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (6.0)\n","Requirement already satisfied: requests>=2.23.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (2.27.1)\n","Requirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (1.10.1)\n","Requirement already satisfied: torch>=1.7.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (2.0.0+cu118)\n","Requirement already satisfied: torchvision>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (0.15.1+cu118)\n","Requirement already satisfied: tqdm>=4.64.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (4.65.0)\n","Requirement already satisfied: pandas>=1.1.4 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (1.5.3)\n","Requirement already satisfied: seaborn>=0.11.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (0.12.2)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from ultralytics) (5.9.5)\n","Collecting sentry-sdk (from ultralytics)\n","  Downloading sentry_sdk-1.23.1-py2.py3-none-any.whl (205 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m205.1/205.1 kB\u001b[0m \u001b[31m21.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.2.2->ultralytics) (1.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.2.2->ultralytics) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.2.2->ultralytics) (4.39.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.2.2->ultralytics) (1.4.4)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.2.2->ultralytics) (1.22.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.2.2->ultralytics) (23.1)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.2.2->ultralytics) (3.0.9)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.2.2->ultralytics) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.1.4->ultralytics) (2022.7.1)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.23.0->ultralytics) (1.26.15)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.23.0->ultralytics) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests>=2.23.0->ultralytics) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.23.0->ultralytics) (3.4)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->ultralytics) (3.12.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->ultralytics) (4.5.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->ultralytics) (1.11.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->ultralytics) (3.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->ultralytics) (3.1.2)\n","Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.7.0->ultralytics) (2.0.0)\n","Requirement already satisfied: cmake in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.7.0->ultralytics) (3.25.2)\n","Requirement already satisfied: lit in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.7.0->ultralytics) (16.0.3)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib>=3.2.2->ultralytics) (1.16.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.7.0->ultralytics) (2.1.2)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch>=1.7.0->ultralytics) (1.3.0)\n","Installing collected packages: sentry-sdk, cv, ultralytics\n","Successfully installed cv-1.0.0 sentry-sdk-1.23.1 ultralytics-8.0.105\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting filterpy\n","  Using cached filterpy-1.4.5-py3-none-any.whl\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from filterpy) (1.22.4)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from filterpy) (1.10.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from filterpy) (3.7.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy) (1.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy) (4.39.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy) (1.4.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy) (23.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy) (8.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy) (3.0.9)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->filterpy) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->filterpy) (1.16.0)\n","Installing collected packages: filterpy\n","Successfully installed filterpy-1.4.5\n"]}],"source":["# install requirements\n","!pip install -r SORT/requirements.txt\n","!pip install cv ultralytics\n","!pip install filterpy "]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":10712,"status":"ok","timestamp":1684357313862,"user":{"displayName":"Pijush Bhuyan","userId":"04528471696330882279"},"user_tz":-330},"id":"pIVnqEPtlNa_"},"outputs":[],"source":["# import libraries\n","import torch\n","import torchvision\n","import cv2\n","import sys\n","sys.path.insert(0,'./SORT/')\n","import matplotlib\n","from google.colab.patches import cv2_imshow\n","from collections import namedtuple, OrderedDict\n","import glob\n","from tqdm import tqdm\n","from SORT.sort import *"]},{"cell_type":"code","source":["# download and load a pretrained YoloV5 object detector model\n","\n","yolov5_detector = torch.hub.load('ultralytics/yolov5', 'yolov5s', pretrained = True)\n","yolov5_detector.float()\n","yolov5_detector.eval()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uZYpKj7LY6mJ","executionInfo":{"status":"ok","timestamp":1684357322960,"user_tz":-330,"elapsed":7294,"user":{"displayName":"Pijush Bhuyan","userId":"04528471696330882279"}},"outputId":"54996ada-9533-4073-a882-e6c2ddc13be6"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/torch/hub.py:286: UserWarning: You are about to download and run code from an untrusted repository. In a future release, this won't be allowed. To add the repository to your trusted list, change the command to {calling_fn}(..., trust_repo=False) and a command prompt will appear asking for an explicit confirmation of trust, or load(..., trust_repo=True), which will assume that the prompt is to be answered with 'yes'. You can also use load(..., trust_repo='check') which will only prompt for confirmation if the repo is not already trusted. This will eventually be the default behaviour\n","  warnings.warn(\n","Downloading: \"https://github.com/ultralytics/yolov5/zipball/master\" to /root/.cache/torch/hub/master.zip\n","YOLOv5 🚀 2023-5-17 Python-3.10.11 torch-2.0.0+cu118 CPU\n","\n"]},{"output_type":"stream","name":"stdout","text":["\u001b[31m\u001b[1mrequirements:\u001b[0m /usr/local/lib/python3.10/dist-packages/requirements.txt not found, check failed.\n"]},{"output_type":"stream","name":"stderr","text":["Downloading https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5s.pt to yolov5s.pt...\n","100%|██████████| 14.1M/14.1M [00:00<00:00, 109MB/s] \n","\n","Fusing layers... \n","YOLOv5s summary: 213 layers, 7225885 parameters, 0 gradients\n","Adding AutoShape... \n"]},{"output_type":"execute_result","data":{"text/plain":["AutoShape(\n","  (model): DetectMultiBackend(\n","    (model): DetectionModel(\n","      (model): Sequential(\n","        (0): Conv(\n","          (conv): Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2))\n","          (act): SiLU(inplace=True)\n","        )\n","        (1): Conv(\n","          (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","          (act): SiLU(inplace=True)\n","        )\n","        (2): C3(\n","          (cv1): Conv(\n","            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv2): Conv(\n","            (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv3): Conv(\n","            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (m): Sequential(\n","            (0): Bottleneck(\n","              (cv1): Conv(\n","                (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","              (cv2): Conv(\n","                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","            )\n","          )\n","        )\n","        (3): Conv(\n","          (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","          (act): SiLU(inplace=True)\n","        )\n","        (4): C3(\n","          (cv1): Conv(\n","            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv2): Conv(\n","            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv3): Conv(\n","            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (m): Sequential(\n","            (0): Bottleneck(\n","              (cv1): Conv(\n","                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","              (cv2): Conv(\n","                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","            )\n","            (1): Bottleneck(\n","              (cv1): Conv(\n","                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","              (cv2): Conv(\n","                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","            )\n","          )\n","        )\n","        (5): Conv(\n","          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","          (act): SiLU(inplace=True)\n","        )\n","        (6): C3(\n","          (cv1): Conv(\n","            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv2): Conv(\n","            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv3): Conv(\n","            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (m): Sequential(\n","            (0): Bottleneck(\n","              (cv1): Conv(\n","                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","              (cv2): Conv(\n","                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","            )\n","            (1): Bottleneck(\n","              (cv1): Conv(\n","                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","              (cv2): Conv(\n","                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","            )\n","            (2): Bottleneck(\n","              (cv1): Conv(\n","                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","              (cv2): Conv(\n","                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","            )\n","          )\n","        )\n","        (7): Conv(\n","          (conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","          (act): SiLU(inplace=True)\n","        )\n","        (8): C3(\n","          (cv1): Conv(\n","            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv2): Conv(\n","            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv3): Conv(\n","            (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (m): Sequential(\n","            (0): Bottleneck(\n","              (cv1): Conv(\n","                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","              (cv2): Conv(\n","                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","            )\n","          )\n","        )\n","        (9): SPPF(\n","          (cv1): Conv(\n","            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv2): Conv(\n","            (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (m): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)\n","        )\n","        (10): Conv(\n","          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))\n","          (act): SiLU(inplace=True)\n","        )\n","        (11): Upsample(scale_factor=2.0, mode='nearest')\n","        (12): Concat()\n","        (13): C3(\n","          (cv1): Conv(\n","            (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv2): Conv(\n","            (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv3): Conv(\n","            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (m): Sequential(\n","            (0): Bottleneck(\n","              (cv1): Conv(\n","                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","              (cv2): Conv(\n","                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","            )\n","          )\n","        )\n","        (14): Conv(\n","          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))\n","          (act): SiLU(inplace=True)\n","        )\n","        (15): Upsample(scale_factor=2.0, mode='nearest')\n","        (16): Concat()\n","        (17): C3(\n","          (cv1): Conv(\n","            (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv2): Conv(\n","            (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv3): Conv(\n","            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (m): Sequential(\n","            (0): Bottleneck(\n","              (cv1): Conv(\n","                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","              (cv2): Conv(\n","                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","            )\n","          )\n","        )\n","        (18): Conv(\n","          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","          (act): SiLU(inplace=True)\n","        )\n","        (19): Concat()\n","        (20): C3(\n","          (cv1): Conv(\n","            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv2): Conv(\n","            (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv3): Conv(\n","            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (m): Sequential(\n","            (0): Bottleneck(\n","              (cv1): Conv(\n","                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","              (cv2): Conv(\n","                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","            )\n","          )\n","        )\n","        (21): Conv(\n","          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","          (act): SiLU(inplace=True)\n","        )\n","        (22): Concat()\n","        (23): C3(\n","          (cv1): Conv(\n","            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv2): Conv(\n","            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (cv3): Conv(\n","            (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n","            (act): SiLU(inplace=True)\n","          )\n","          (m): Sequential(\n","            (0): Bottleneck(\n","              (cv1): Conv(\n","                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","              (cv2): Conv(\n","                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","                (act): SiLU(inplace=True)\n","              )\n","            )\n","          )\n","        )\n","        (24): Detect(\n","          (m): ModuleList(\n","            (0): Conv2d(128, 255, kernel_size=(1, 1), stride=(1, 1))\n","            (1): Conv2d(256, 255, kernel_size=(1, 1), stride=(1, 1))\n","            (2): Conv2d(512, 255, kernel_size=(1, 1), stride=(1, 1))\n","          )\n","        )\n","      )\n","    )\n","  )\n",")"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W4d6d0-arZZ6"},"outputs":[],"source":["# visualize a video frame\n","raw_frame = cv2.imread('/content/KITTI_17_images/000001.jpg')\n","cv2_imshow(raw_frame)"]},{"cell_type":"code","source":["# perform object detection on this frame\n","results = yolov5_detector(raw_frame)\n","person_mask = results.xyxy[0][:,-1] == 0 # only need humans which have class value = 0\n","bboxes = results.xyxy[0][person_mask] # filter out bounding boxes only for humans\n","bboxes = bboxes.detach().numpy()\n","print(bboxes)"],"metadata":{"id":"WADKcFBscQDu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# draw bounding boxes over the video frame\n","for box in bboxes:\n","    x1,y1 = int(box[0]), int(box[1]) # bottom left corner \n","    x2,y2 = int(box[2]), int(box[3]) # top right corner\n","    cv2.rectangle(raw_frame, (x1, y1), (x2, y2), (0,255,0), 2) # draw a rectangle defined by the above coordinates\n","\n","cv2_imshow(raw_frame)"],"metadata":{"id":"PBaMrM_mce5k"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# apply tracking on the video frame\n","sort = Sort()\n","result = sort.update(bboxes) # apply tracking on the detected bounding boxex\n","for r in result:\n","  id = int(r[4])\n","  bbox = r[:4].astype(np.int64)\n","  x1,y1 = bbox[0], bbox[1]\n","  x2,y2 = bbox[2], bbox[3]\n","  cv2.rectangle(raw_frame, (x1, y1), (x2, y2), (0,255,0), 2) # draw bounding box for detected object\n","  cv2.putText(raw_frame,str(id),(int(x1), int(y1) - 10),0,0.5,(0,0,255),1) # draw ID number for detected object\n","cv2_imshow(raw_frame)"],"metadata":{"id":"4xFzDmb4c-PR"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":37944,"status":"ok","timestamp":1684357395687,"user":{"displayName":"Pijush Bhuyan","userId":"04528471696330882279"},"user_tz":-330},"id":"EqcT1rO2pC12","outputId":"64bc265b-087a-446d-b245-aa10b62704c2"},"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 146/146 [00:36<00:00,  3.99it/s]\n"]}],"source":["# Perform the above operations for all frames of the video and write them as a new video file\n","sort = Sort()\n","# load images\n","img_files = sorted(glob.glob('/content/KITTI_17_images/*.jpg'))\n","frames = []\n","gt = []\n","detected_objects = {}\n","for i in tqdm(range(len(img_files))):\n","  img = cv2.imread(img_files[i])\n","  results = yolov5_detector(img)\n","  person_mask = results.xyxy[0][:,-1] == 0\n","  bboxes = results.xyxy[0][person_mask]\n","  bboxes = bboxes.detach().numpy()\n","  result = sort.update(bboxes)\n","  for r in result:\n","    id = int(r[4])\n","    bbox = r[:4].astype(np.int64)\n","    confidence = results.xyxy[0][:, 4].cpu().numpy()\n","    x1,y1 = bbox[0], bbox[1]\n","    x2,y2 = bbox[2], bbox[3]\n","    cv2.rectangle(img, (x1, y1), (x2, y2), (0,255,0), 2)\n","    cv2.putText(img,str(id),(int(x1), int(y1) - 10),0,0.5,(0,0,255),1)\n","    if id in detected_objects:\n","      detected_objects[id]['boxes'].append(bbox)\n","    else:\n","      detected_objects[id] = {'boxes':[bbox]}\n","  \n","  for id in list(detected_objects.keys()):\n","    s = ','.join([str(i+1)]+[str(id)] + [str(round(coord,2)) for bbox in detected_objects[id]['boxes'] for coord in bbox] +[str(round(confidence[0]))]+ ['-1'] * 3)\n","    gt.append(s)\n","    detected_objects.pop(id)\n","\n","  frames.append(img.copy())\n","\n","\n","\n","# write frames into a video\n","fourcc = cv2.VideoWriter_fourcc(*'mp4v')\n","fps = 10\n","img = cv2.imread(img_files[0])\n","height, width, channels = img.shape[0], img.shape[1], 3\n","size = (width, height)\n","out = cv2.VideoWriter('output_video_generated.mp4', fourcc, fps, size)\n","for frame in frames:\n","    out.write(frame)\n","out.release()"]},{"cell_type":"code","source":[],"metadata":{"id":"nIPhDoIshZ2I"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}